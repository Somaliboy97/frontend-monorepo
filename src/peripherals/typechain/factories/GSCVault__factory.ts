/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GSCVault, GSCVaultInterface } from "../GSCVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICoreVoting",
        name: "_coreVoting",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_votingPowerBound",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "when",
        type: "uint256",
      },
    ],
    name: "Kicked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "when",
        type: "uint256",
      },
    ],
    name: "MembershipProved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "coreVoting",
    outputs: [
      {
        internalType: "contract ICoreVoting",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "deauthorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "getUserVaults",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "idleDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "extraData",
        type: "bytes[]",
      },
    ],
    name: "kick",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "members",
    outputs: [
      {
        internalType: "uint256",
        name: "joined",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "votingVaults",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "extraData",
        type: "bytes[]",
      },
    ],
    name: "proveMembership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "queryVotePower",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICoreVoting",
        name: "_newVoting",
        type: "address",
      },
    ],
    name: "setCoreVoting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_idleDuration",
        type: "uint256",
      },
    ],
    name: "setIdleDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newBound",
        type: "uint256",
      },
    ],
    name: "setVotePowerBound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "votingPowerBound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052620546006005553480156200001857600080fd5b50604051620018d9380380620018d98339810160408190526200003b91620000f1565b60008054336001600160a01b031991821617909155600380549091166001600160a01b038516179055600482905562000074816200007d565b50505062000151565b6000546001600160a01b03163314620000cf5760405162461bcd60e51b815260206004820152601060248201526f29b2b73232b9103737ba1037bbb732b960811b604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60008060006060848603121562000106578283fd5b8351620001138162000138565b6020850151604086015191945092506200012d8162000138565b809150509250925092565b6001600160a01b03811681146200014e57600080fd5b50565b61177880620001616000396000f3fe608060405234801561001057600080fd5b506004361061011a5760003560e01c80637e280246116100b2578063b6a5d7de11610081578063e7f3c69c11610066578063e7f3c69c14610299578063e91f3235146102b9578063fe9fbb80146102cc5761011a565b8063b6a5d7de14610253578063b9181611146102665761011a565b80637e280246146101d25780638da5cb5b146101e5578063ad292ff81461022a578063ae4b3628146102335761011a565b806322905a6c116100ee57806322905a6c1461019057806327c97fa5146101a357806338e02bf7146101b65780633eba045b146101bf5761011a565b8062fe809c1461011f57806308ae4b0c1461013457806309960f001461016a57806313af40351461017d575b600080fd5b61013261012d36600461152b565b610305565b005b6101576101423660046113a8565b60026020526000908152604090206001015481565b6040519081526020015b60405180910390f35b6101326101783660046114a2565b610390565b61013261018b3660046113a8565b61096b565b61013261019e3660046113cb565b610a33565b6101326101b13660046113a8565b610df5565b61015760045481565b6101326101cd36600461152b565b610ec2565b6101326101e03660046113a8565b610f48565b6000546102059073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610161565b61015760055481565b6003546102059073ffffffffffffffffffffffffffffffffffffffff1681565b6101326102613660046113a8565b611010565b6102896102743660046113a8565b60016020526000908152604090205460ff1681565b6040519015158152602001610161565b6102ac6102a73660046113a8565b6110ea565b60405161016191906115cc565b6101576102c736600461141e565b61117a565b6102896102da3660046113a8565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205460ff1690565b60005473ffffffffffffffffffffffffffffffffffffffff16331461038b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f53656e646572206e6f74206f776e65720000000000000000000000000000000060448201526064015b60405180910390fd5b600555565b826103c4577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b60005b838110156106b15760006103dc826001611689565b90505b8481101561052957858582818110610420577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201602081019061043591906113a8565b73ffffffffffffffffffffffffffffffffffffffff16868684818110610484577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201602081019061049991906113a8565b73ffffffffffffffffffffffffffffffffffffffff161415610517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f6475706c6963617465207661756c7400000000000000000000000000000000006044820152606401610382565b80610521816116b8565b9150506103df565b5060035460009073ffffffffffffffffffffffffffffffffffffffff1663af7a060c878785818110610584577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201602081019061059991906113a8565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff909116600482015260240160206040518083038186803b1580156105fd57600080fd5b505afa158015610611573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610635919061150b565b90508061069e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f566f74696e67207661756c74206e6f7420617070726f766564000000000000006044820152606401610382565b50806106a9816116b8565b9150506103c7565b506000805b848110156108135760008686838181106106f9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201602081019061070e91906113a8565b73ffffffffffffffffffffffffffffffffffffffff1663e91f3235336107356001436116a1565b88888781811061076e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020028101906107809190611626565b6040518563ffffffff1660e01b815260040161079f949392919061155b565b602060405180830381600087803b1580156107b957600080fd5b505af11580156107cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f19190611543565b90506107fd8184611689565b925050808061080b906116b8565b9150506106b6565b50600454811015610880576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f4e6f7420656e6f75676820766f746573000000000000000000000000000000006044820152606401610382565b33600090815260026020526040902060010154156108b8573360009081526002602052604090206108b290868661122d565b5061092e565b6040518060400160405280868680806020026020016040519081016040528093929190818152602001838360200280828437600092018290525093855250504260209384015250338152600282526040902082518051919261091f928492909101906112b5565b50602082015181600101559050505b60405142815233907ff1e092311eefceee7206049c87d17464c34a7b92b85779b0b835ddb292a42e70906020015b60405180910390a25050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146109ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f53656e646572206e6f74206f776e6572000000000000000000000000000000006044820152606401610382565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260026020908152604080832080548251818502810185019093528083529192909190830182828015610ab757602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610a8c575b505050505090506000805b8251811015610d0757600354835173ffffffffffffffffffffffffffffffffffffffff9091169063af7a060c90859084908110610b28577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516040518263ffffffff1660e01b8152600401610b68919073ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b60206040518083038186803b158015610b8057600080fd5b505afa158015610b94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb8919061150b565b15610cf5576000838281518110610bf8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663e91f323588600143610c2991906116a1565b898987818110610c62577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002810190610c749190611626565b6040518563ffffffff1660e01b8152600401610c93949392919061155b565b602060405180830381600087803b158015610cad57600080fd5b505af1158015610cc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce59190611543565b9050610cf18184611689565b9250505b80610cff816116b8565b915050610ac2565b506004548110610d73576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f4e6f74206b69636b2d61626c65000000000000000000000000000000000000006044820152606401610382565b73ffffffffffffffffffffffffffffffffffffffff8516600090815260026020526040812090610da3828261132f565b600182016000905550508473ffffffffffffffffffffffffffffffffffffffff167f8684348ed72cd103be12fcb99e9c5917294a8092ccd4808d1cd7b19daf9829914360405161095c91815260200190565b60005473ffffffffffffffffffffffffffffffffffffffff163314610e76576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f53656e646572206e6f74206f776e6572000000000000000000000000000000006044820152606401610382565b73ffffffffffffffffffffffffffffffffffffffff16600090815260016020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610f43576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f53656e646572206e6f74206f776e6572000000000000000000000000000000006044820152606401610382565b600455565b60005473ffffffffffffffffffffffffffffffffffffffff163314610fc9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f53656e646572206e6f74206f776e6572000000000000000000000000000000006044820152606401610382565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff163314611091576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f53656e646572206e6f74206f776e6572000000000000000000000000000000006044820152606401610382565b6110e78173ffffffffffffffffffffffffffffffffffffffff16600090815260016020819052604090912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169091179055565b50565b73ffffffffffffffffffffffffffffffffffffffff811660009081526002602090815260409182902080548351818402810184019094528084526060939283018282801561116e57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611143575b50505050509050919050565b6000805473ffffffffffffffffffffffffffffffffffffffff868116911614156111a85750620186a0611225565b73ffffffffffffffffffffffffffffffffffffffff851660009081526002602052604090206001015415801590611214575060055473ffffffffffffffffffffffffffffffffffffffff8616600090815260026020526040902060010154429161121191611689565b11155b1561122157506001611225565b5060005b949350505050565b8280548282559060005260206000209081019282156112a5579160200282015b828111156112a55781547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84351617825560209092019160019091019061124d565b506112b1929150611349565b5090565b8280548282559060005260206000209081019282156112a5579160200282015b828111156112a557825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906112d5565b50805460008255906000526020600020908101906110e791905b5b808211156112b1576000815560010161134a565b60008083601f84011261136f578182fd5b50813567ffffffffffffffff811115611386578182fd5b6020830191508360208260051b85010111156113a157600080fd5b9250929050565b6000602082840312156113b9578081fd5b81356113c481611720565b9392505050565b6000806000604084860312156113df578182fd5b83356113ea81611720565b9250602084013567ffffffffffffffff811115611405578283fd5b6114118682870161135e565b9497909650939450505050565b60008060008060608587031215611433578081fd5b843561143e81611720565b935060208501359250604085013567ffffffffffffffff80821115611461578283fd5b818701915087601f830112611474578283fd5b813581811115611482578384fd5b886020828501011115611493578384fd5b95989497505060200194505050565b600080600080604085870312156114b7578384fd5b843567ffffffffffffffff808211156114ce578586fd5b6114da8883890161135e565b909650945060208701359150808211156114f2578384fd5b506114ff8782880161135e565b95989497509550505050565b60006020828403121561151c578081fd5b815180151581146113c4578182fd5b60006020828403121561153c578081fd5b5035919050565b600060208284031215611554578081fd5b5051919050565b600073ffffffffffffffffffffffffffffffffffffffff861682528460208301526060604083015282606083015282846080840137818301608090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01601019392505050565b6020808252825182820181905260009190848201906040850190845b8181101561161a57835173ffffffffffffffffffffffffffffffffffffffff16835292840192918401916001016115e8565b50909695505050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261165a578283fd5b83018035915067ffffffffffffffff821115611674578283fd5b6020019150368190038213156113a157600080fd5b6000821982111561169c5761169c6116f1565b500190565b6000828210156116b3576116b36116f1565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156116ea576116ea6116f1565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff811681146110e757600080fdfea264697066735822122005c1d85da7a327e2d1dc202f652ed7a5cd95c2db6db92e9d41c54c813df2e95064736f6c63430008030033";

type GSCVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GSCVaultConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GSCVault__factory extends ContractFactory {
  constructor(...args: GSCVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _coreVoting: string,
    _votingPowerBound: BigNumberish,
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<GSCVault> {
    return super.deploy(
      _coreVoting,
      _votingPowerBound,
      _owner,
      overrides || {},
    ) as Promise<GSCVault>;
  }
  getDeployTransaction(
    _coreVoting: string,
    _votingPowerBound: BigNumberish,
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _coreVoting,
      _votingPowerBound,
      _owner,
      overrides || {},
    );
  }
  attach(address: string): GSCVault {
    return super.attach(address) as GSCVault;
  }
  connect(signer: Signer): GSCVault__factory {
    return super.connect(signer) as GSCVault__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GSCVaultInterface {
    return new utils.Interface(_abi) as GSCVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): GSCVault {
    return new Contract(address, _abi, signerOrProvider) as GSCVault;
  }
}
