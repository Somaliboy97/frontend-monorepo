/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MCMod, MCModInterface } from "../MCMod";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_sushi",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_sushiPerBlock",
        type: "uint256",
      },
      {
        internalType: "contract ILockingVault",
        name: "_LockingVault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Harvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "LogInit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "lpToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract IRewarder",
        name: "rewarder",
        type: "address",
      },
    ],
    name: "LogPoolAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "contract IRewarder",
        name: "rewarder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "overwrite",
        type: "bool",
      },
    ],
    name: "LogSetPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "lastRewardBlock",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lpSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "accSushiPerShare",
        type: "uint256",
      },
    ],
    name: "LogUpdatePool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "SUSHI",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "contract IRewarder",
        name: "_rewarder",
        type: "address",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "calls",
        type: "bytes[]",
      },
      {
        internalType: "bool",
        name: "revertOnFail",
        type: "bool",
      },
    ],
    name: "batch",
    outputs: [
      {
        internalType: "bool[]",
        name: "successes",
        type: "bool[]",
      },
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lockingVault",
    outputs: [
      {
        internalType: "contract ILockingVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lpToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "pids",
        type: "uint256[]",
      },
    ],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingSushi",
    outputs: [
      {
        internalType: "uint256",
        name: "pending",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permitToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "uint128",
        name: "accSushiPerShare",
        type: "uint128",
      },
      {
        internalType: "uint64",
        name: "lastRewardBlock",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "allocPoint",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "pools",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewarder",
    outputs: [
      {
        internalType: "contract IRewarder",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "contract IRewarder",
        name: "_rewarder",
        type: "address",
      },
      {
        internalType: "bool",
        name: "overwrite",
        type: "bool",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sushiPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "accSushiPerShare",
            type: "uint128",
          },
          {
            internalType: "uint64",
            name: "lastRewardBlock",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "allocPoint",
            type: "uint64",
          },
        ],
        internalType: "struct MCMod.PoolInfo",
        name: "pool",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "rewardDebt",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawAndHarvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002cdd38038062002cdd83398101604081905262000034916200015e565b600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36005829055606083901b6001600160601b031916608052600680546001600160a01b0319166001600160a01b038381169190911790915560405163095ea7b360e01b81529084169063095ea7b390620000d590849060001990600401620001a5565b602060405180830381600087803b158015620000f057600080fd5b505af115801562000105573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200012b919062000135565b50505050620001d7565b60006020828403121562000147578081fd5b8151801515811462000157578182fd5b9392505050565b60008060006060848603121562000173578182fd5b83516200018081620001be565b6020850151604086015191945092506200019a81620001be565b809150509250925092565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0381168114620001d457600080fd5b50565b60805160601c612ae8620001f5600039806115475250612ae86000f3fe6080604052600436106101965760003560e01c80637c516e94116100e1578063ab7de0981161008a578063d1abb90711610064578063d1abb90714610448578063d2423b5114610468578063d2a0434514610489578063e30c39781461049e57610196565b8063ab7de098146103f3578063b0bcf42a14610413578063c346253d1461042857610196565b80638dbdbe6d116100bb5780638dbdbe6d1461039057806393f1a40b146103b0578063ab560e10146103de57610196565b80637c516e941461033b57806388bba42f1461035b5780638da5cb5b1461037b57610196565b8063195426ec1161014357806351eb05a61161011d57806351eb05a6146102c157806357a5b58c146102ee57806378ed5d1f1461030e57610196565b8063195426ec1461026c5780632f940c701461028c5780634e71e0c8146102ac57610196565b80631526fe27116101745780631526fe271461020857806317caf6f11461023757806318fccc761461024c57610196565b8063078dfbe71461019b578063081e3eda146101bd5780630ad58d2f146101e8575b600080fd5b3480156101a757600080fd5b506101bb6101b63660046120d8565b6104b3565b005b3480156101c957600080fd5b506101d26105d2565b6040516101df9190612973565b60405180910390f35b3480156101f457600080fd5b506101bb61020336600461239d565b6105d8565b34801561021457600080fd5b50610228610223366004612308565b61078a565b6040516101df9392919061293f565b34801561024357600080fd5b506101d26107f8565b34801561025857600080fd5b506101bb610267366004612338565b6107fe565b34801561027857600080fd5b506101d2610287366004612338565b610990565b34801561029857600080fd5b506101bb6102a7366004612338565b610bd9565b3480156102b857600080fd5b506101bb610d13565b3480156102cd57600080fd5b506102e16102dc366004612308565b610db8565b6040516101df91906128fc565b3480156102fa57600080fd5b506101bb61030936600461216c565b6110f6565b34801561031a57600080fd5b5061032e610329366004612308565b61112c565b6040516101df9190612489565b34801561034757600080fd5b506101bb6103563660046121c8565b611153565b34801561036757600080fd5b506101bb6103763660046123ca565b6111e0565b34801561038757600080fd5b5061032e611365565b34801561039c57600080fd5b506101bb6103ab36600461239d565b611374565b3480156103bc57600080fd5b506103d06103cb366004612338565b611521565b6040516101df9291906129bb565b3480156103ea57600080fd5b5061032e611545565b3480156103ff57600080fd5b506101bb61040e366004612367565b611569565b34801561041f57600080fd5b506101d26117c4565b34801561043457600080fd5b5061032e610443366004612308565b6117ca565b34801561045457600080fd5b506101bb61046336600461239d565b6117d7565b61047b610476366004612122565b611a0b565b6040516101df92919061253e565b34801561049557600080fd5b5061032e611b9d565b3480156104aa57600080fd5b5061032e611bac565b6000546001600160a01b031633146104e65760405162461bcd60e51b81526004016104dd90612792565b60405180910390fd5b8115610599576001600160a01b0383161515806105005750805b61051c5760405162461bcd60e51b81526004016104dd906126ed565b600080546040516001600160a01b03808716939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0385167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556001805490911690556105cd565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0385161790555b505050565b60025490565b6105e061206f565b6105e984610db8565b600085815260076020908152604080832033845290915290208151919250906106449064e8d4a51000906106309087906fffffffffffffffffffffffffffffffff16611bbb565b8161063757fe5b6001840154919004611bf8565b600182015580546106559085611c45565b815560048054600091908790811061066957fe5b6000918252602090912001546001600160a01b0316905080156107085781546040517f8bf637420000000000000000000000000000000000000000000000000000000081526001600160a01b03831691638bf63742916106d5918a9133918a916000919060040161297c565b600060405180830381600087803b1580156106ef57600080fd5b505af1158015610703573d6000803e3d6000fd5b505050505b61073684866003898154811061071a57fe5b6000918252602090912001546001600160a01b03169190611c68565b836001600160a01b031686336001600160a01b03167f8166bf25f8a2b7ed3c85049207da4358d16edbed977d23fa2ee6f0dde3ec21328860405161077a9190612973565b60405180910390a4505050505050565b6002818154811061079757fe5b6000918252602090912001546fffffffffffffffffffffffffffffffff8116915067ffffffffffffffff7001000000000000000000000000000000008204811691780100000000000000000000000000000000000000000000000090041683565b60085481565b61080661206f565b61080f83610db8565b6000848152600760209081526040808320338452909152812082518154939450909264e8d4a510009161085491906fffffffffffffffffffffffffffffffff16611bbb565b8161085b57fe5b049050600061087f61087a846001015484611bf890919063ffffffff16565b611d6b565b6001840183905590508015610898576108988582611d91565b6000600487815481106108a757fe5b6000918252602090912001546001600160a01b0316905080156109455783546040517f8bf637420000000000000000000000000000000000000000000000000000000081526001600160a01b03831691638bf6374291610912918b9133918c9189919060040161297c565b600060405180830381600087803b15801561092c57600080fd5b505af1158015610940573d6000803e3d6000fd5b505050505b86336001600160a01b03167f71bab65ced2e5750775a0613be067df48ef06cf92a496ebf7663ae06609249548460405161097f9190612973565b60405180910390a350505050505050565b600061099a61206f565b600284815481106109a757fe5b600091825260208083206040805160608101825291909301546fffffffffffffffffffffffffffffffff808216835267ffffffffffffffff7001000000000000000000000000000000008304811684860152780100000000000000000000000000000000000000000000000090920490911682850152888552600783528385206001600160a01b0389168652909252918320825160038054949650919492169288908110610a5157fe5b6000918252602090912001546040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906370a0823190610aa3903090600401612489565b60206040518083038186803b158015610abb57600080fd5b505afa158015610acf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af39190612320565b9050836020015167ffffffffffffffff1643118015610b1157508015155b15610ba0576000610b39856020015167ffffffffffffffff1643611c4590919063ffffffff16565b90506000610b76600854610b66886040015167ffffffffffffffff16600554611bbb90919063ffffffff16565b81610b6d57fe5b84919004611bbb565b9050610b9b83610b8b8364e8d4a51000611bbb565b81610b9257fe5b86919004611e14565b935050505b60018301548354610bce9161087a9164e8d4a5100090610bc09087611bbb565b81610bc757fe5b0490611bf8565b979650505050505050565b60008281526007602090815260408083203384529091528120805482825560018201839055600480549293919286908110610c1057fe5b6000918252602090912001546001600160a01b031690508015610cae576040517f8bf637420000000000000000000000000000000000000000000000000000000081526001600160a01b03821690638bf6374290610c7b90889033908990600090819060040161297c565b600060405180830381600087803b158015610c9557600080fd5b505af1158015610ca9573d6000803e3d6000fd5b505050505b610cc084836003888154811061071a57fe5b836001600160a01b031685336001600160a01b03167f2cac5e20e1541d836381527a43f651851e302817b71dc8e810284e69210c1c6b85604051610d049190612973565b60405180910390a45050505050565b6001546001600160a01b0316338114610d3e5760405162461bcd60e51b81526004016104dd906127c7565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179055600180549091169055565b610dc061206f565b60028281548110610dcd57fe5b60009182526020918290206040805160608101825292909101546fffffffffffffffffffffffffffffffff8116835267ffffffffffffffff700100000000000000000000000000000000820481169484018590527801000000000000000000000000000000000000000000000000909104169082015291504311156110f157600060038381548110610e5b57fe5b6000918252602090912001546040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906370a0823190610ead903090600401612489565b60206040518083038186803b158015610ec557600080fd5b505afa158015610ed9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efd9190612320565b90508015610fab576000610f28836020015167ffffffffffffffff1643611c4590919063ffffffff16565b90506000610f55600854610b66866040015167ffffffffffffffff16600554611bbb90919063ffffffff16565b9050610f94610f7a84610f6d8464e8d4a51000611bbb565b81610f7457fe5b04611e37565b85516fffffffffffffffffffffffffffffffff1690611e69565b6fffffffffffffffffffffffffffffffff16845250505b610fb443611ea1565b67ffffffffffffffff1660208301526002805483919085908110610fd457fe5b6000918252602091829020835191018054848401516040958601517fffffffffffffffffffffffffffffffff000000000000000000000000000000009092166fffffffffffffffffffffffffffffffff909416939093177fffffffffffffffff0000000000000000ffffffffffffffffffffffffffffffff1670010000000000000000000000000000000067ffffffffffffffff948516021777ffffffffffffffffffffffffffffffffffffffffffffffff16780100000000000000000000000000000000000000000000000093909116929092029190911790558301518351915185927f0fc9545022a542541ad085d091fb09a2ab36fee366a4576ab63714ea907ad353926110e792909186916129c9565b60405180910390a2505b919050565b8060005b818110156111265761111d84848381811061111157fe5b90506020020135610db8565b506001016110fa565b50505050565b6003818154811061113957fe5b6000918252602090912001546001600160a01b0316905081565b6040517fd505accf0000000000000000000000000000000000000000000000000000000081526001600160a01b0389169063d505accf906111a4908a908a908a908a908a908a908a906004016124c1565b600060405180830381600087803b1580156111be57600080fd5b505af11580156111d2573d6000803e3d6000fd5b505050505050505050505050565b6000546001600160a01b0316331461120a5760405162461bcd60e51b81526004016104dd90612792565b61125f836112596002878154811061121e57fe5b600091825260209091200154600854907801000000000000000000000000000000000000000000000000900467ffffffffffffffff16611c45565b90611e14565b60085561126b83611ea1565b6002858154811061127857fe5b9060005260206000200160000160186101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555080156112ee5781600485815481106112bf57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b8061131a576004848154811061130057fe5b6000918252602090912001546001600160a01b031661131c565b815b6001600160a01b0316847f95895a6ab1df54420d241b55243258a33e61b2194db66c1179ec521aae8e186585846040516113579291906129ab565b60405180910390a350505050565b6000546001600160a01b031681565b61137c61206f565b61138584610db8565b60008581526007602090815260408083206001600160a01b038716845290915290208054919250906113b79085611e14565b815581516113f79064e8d4a51000906113e39087906fffffffffffffffffffffffffffffffff16611bbb565b816113ea57fe5b6001840154919004611ecb565b816001018190555060006004868154811061140e57fe5b6000918252602090912001546001600160a01b0316905080156114ad5781546040517f8bf637420000000000000000000000000000000000000000000000000000000081526001600160a01b03831691638bf637429161147a918a91899182916000919060040161297c565b600060405180830381600087803b15801561149457600080fd5b505af11580156114a8573d6000803e3d6000fd5b505050505b6114dd33308760038a815481106114c057fe5b6000918252602090912001546001600160a01b0316929190611f11565b836001600160a01b031686336001600160a01b03167f02d7e648dd130fc184d383e55bb126ac4c9c60e8f94bf05acdf557ba2d540b478860405161077a9190612973565b60076020908152600092835260408084209091529082529020805460019091015482565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031633146115935760405162461bcd60e51b81526004016104dd90612792565b60085443906115a29085611e14565b6008556003805460018181019092557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b038087167fffffffffffffffffffffffff00000000000000000000000000000000000000009283161790925560048054938401815560009081527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90930180549286169290911691909117905560408051606081019091529081526002906020810161166784611ea1565b67ffffffffffffffff16815260200161167f87611ea1565b67ffffffffffffffff908116909152825460018181018555600094855260209485902084519201805495850151604090950151841678010000000000000000000000000000000000000000000000000277ffffffffffffffffffffffffffffffffffffffffffffffff95909416700100000000000000000000000000000000027fffffffffffffffff0000000000000000ffffffffffffffffffffffffffffffff6fffffffffffffffffffffffffffffffff9094167fffffffffffffffffffffffffffffffff00000000000000000000000000000000909716969096179290921694909417929092161790556003546001600160a01b03808516929086169161178791611c45565b7f81ee0f8c5c46e2cb41984886f77a84181724abb86c32a5f6de539b07509d45e5876040516117b69190612973565b60405180910390a450505050565b60055481565b6004818154811061113957fe5b6117df61206f565b6117e884610db8565b6000858152600760209081526040808320338452909152812082518154939450909264e8d4a510009161182d91906fffffffffffffffffffffffffffffffff16611bbb565b8161183457fe5b049050600061185361087a846001015484611bf890919063ffffffff16565b905061189764e8d4a5100061188786600001516fffffffffffffffffffffffffffffffff1689611bbb90919063ffffffff16565b8161188e57fe5b84919004611bf8565b600184015582546118a89087611c45565b83556118b48582611d91565b6000600488815481106118c357fe5b6000918252602090912001546001600160a01b0316905080156119615783546040517f8bf637420000000000000000000000000000000000000000000000000000000081526001600160a01b03831691638bf637429161192e918c9133918c9189919060040161297c565b600060405180830381600087803b15801561194857600080fd5b505af115801561195c573d6000803e3d6000fd5b505050505b611973868860038b8154811061071a57fe5b856001600160a01b031688336001600160a01b03167f8166bf25f8a2b7ed3c85049207da4358d16edbed977d23fa2ee6f0dde3ec21328a6040516119b79190612973565b60405180910390a487336001600160a01b03167f71bab65ced2e5750775a0613be067df48ef06cf92a496ebf7663ae0660924954846040516119f99190612973565b60405180910390a35050505050505050565b6060808367ffffffffffffffff81118015611a2557600080fd5b50604051908082528060200260200182016040528015611a4f578160200160208202803683370190505b5091508367ffffffffffffffff81118015611a6957600080fd5b50604051908082528060200260200182016040528015611a9d57816020015b6060815260200190600190039081611a885790505b50905060005b84811015611b94576000606030888885818110611abc57fe5b9050602002810190611ace91906129fd565b604051611adc92919061245d565b600060405180830381855af49150503d8060008114611b17576040519150601f19603f3d011682016040523d82523d6000602084013e611b1c565b606091505b50915091508180611b2b575085155b611b348261200f565b90611b525760405162461bcd60e51b81526004016104dd91906125d8565b5081858481518110611b6057fe5b60200260200101901515908115158152505080848481518110611b7f57fe5b60209081029190910101525050600101611aa3565b50935093915050565b6006546001600160a01b031681565b6001546001600160a01b031681565b6000811580611bd657505080820282828281611bd357fe5b04145b611bf25760405162461bcd60e51b81526004016104dd906128c5565b92915050565b6000818303818312801590611c0d5750838113155b80611c225750600083128015611c2257508381135b611c3e5760405162461bcd60e51b81526004016104dd90612833565b9392505050565b80820382811115611bf25760405162461bcd60e51b81526004016104dd906125eb565b60006060846001600160a01b031663a9059cbb8585604051602401611c8e929190612502565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611cdc919061246d565b6000604051808303816000865af19150503d8060008114611d19576040519150601f19603f3d011682016040523d82523d6000602084013e611d1e565b606091505b5091509150818015611d48575080511580611d48575080806020019051810190611d4891906121ac565b611d645760405162461bcd60e51b81526004016104dd90612659565b5050505050565b600080821215611d8d5760405162461bcd60e51b81526004016104dd90612622565b5090565b6006546040517ff45346dc0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063f45346dc90611dde9085908590339060040161251b565b600060405180830381600087803b158015611df857600080fd5b505af1158015611e0c573d6000803e3d6000fd5b505050505050565b81810181811015611bf25760405162461bcd60e51b81526004016104dd9061275b565b60006fffffffffffffffffffffffffffffffff821115611d8d5760405162461bcd60e51b81526004016104dd90612724565b8181016fffffffffffffffffffffffffffffffff8083169082161015611bf25760405162461bcd60e51b81526004016104dd9061275b565b600067ffffffffffffffff821115611d8d5760405162461bcd60e51b81526004016104dd906127fc565b6000828201818312801590611ee05750838112155b80611ef55750600083128015611ef557508381125b611c3e5760405162461bcd60e51b81526004016104dd90612690565b60006060856001600160a01b03166323b872dd868686604051602401611f399392919061249d565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611f87919061246d565b6000604051808303816000865af19150503d8060008114611fc4576040519150601f19603f3d011682016040523d82523d6000602084013e611fc9565b606091505b5091509150818015611ff3575080511580611ff3575080806020019051810190611ff391906121ac565b611e0c5760405162461bcd60e51b81526004016104dd90612890565b6060604482511015612055575060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c7900000060208201526110f1565b60048201915081806020019051810190611bf2919061224f565b604080516060810182526000808252602082018190529181019190915290565b60008083601f8401126120a0578182fd5b50813567ffffffffffffffff8111156120b7578182fd5b60208301915083602080830285010111156120d157600080fd5b9250929050565b6000806000606084860312156120ec578283fd5b83356120f781612a8c565b9250602084013561210781612aa4565b9150604084013561211781612aa4565b809150509250925092565b600080600060408486031215612136578283fd5b833567ffffffffffffffff81111561214c578384fd5b6121588682870161208f565b909450925050602084013561211781612aa4565b6000806020838503121561217e578182fd5b823567ffffffffffffffff811115612194578283fd5b6121a08582860161208f565b90969095509350505050565b6000602082840312156121bd578081fd5b8151611c3e81612aa4565b600080600080600080600080610100898b0312156121e4578384fd5b88356121ef81612a8c565b975060208901356121ff81612a8c565b9650604089013561220f81612a8c565b9550606089013594506080890135935060a089013560ff81168114612232578384fd5b979a969950949793969295929450505060c08201359160e0013590565b600060208284031215612260578081fd5b815167ffffffffffffffff80821115612277578283fd5b818401915084601f83011261228a578283fd5b815181811115612298578384fd5b60405160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011682010181811084821117156122d6578586fd5b6040528181528382016020018710156122ed578485fd5b6122fe826020830160208701612a60565b9695505050505050565b600060208284031215612319578081fd5b5035919050565b600060208284031215612331578081fd5b5051919050565b6000806040838503121561234a578182fd5b82359150602083013561235c81612a8c565b809150509250929050565b60008060006060848603121561237b578283fd5b83359250602084013561238d81612a8c565b9150604084013561211781612a8c565b6000806000606084860312156123b1578283fd5b8335925060208401359150604084013561211781612a8c565b600080600080608085870312156123df578182fd5b843593506020850135925060408501356123f881612a8c565b9150606085013561240881612aa4565b939692955090935050565b6000815180845261242b816020860160208601612a60565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000828483379101908152919050565b6000825161247f818460208701612a60565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0393841681526020810192909252909116604082015260600190565b604080825283519082018190526000906020906060840190828701845b8281101561257957815115158452928401929084019060010161255b565b505050838103828501528085516125908184612973565b91508192508381028201848801865b838110156125c95785830385526125b7838351612413565b9487019492509086019060010161259f565b50909998505050505050505050565b600060208252611c3e6020830184612413565b60208082526015908201527f426f72696e674d6174683a20556e646572666c6f770000000000000000000000604082015260600190565b6020808252600b908201527f496e7465676572203c2030000000000000000000000000000000000000000000604082015260600190565b6020808252601c908201527f426f72696e6745524332303a205472616e73666572206661696c656400000000604082015260600190565b60208082526021908201527f5369676e6564536166654d6174683a206164646974696f6e206f766572666c6f60408201527f7700000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526015908201527f4f776e61626c653a207a65726f20616464726573730000000000000000000000604082015260600190565b6020808252601c908201527f426f72696e674d6174683a2075696e74313238204f766572666c6f7700000000604082015260600190565b60208082526018908201527f426f72696e674d6174683a20416464204f766572666c6f770000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e6572604082015260600190565b6020808252601b908201527f426f72696e674d6174683a2075696e743634204f766572666c6f770000000000604082015260600190565b60208082526024908201527f5369676e6564536166654d6174683a207375627472616374696f6e206f76657260408201527f666c6f7700000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f426f72696e6745524332303a205472616e7366657246726f6d206661696c6564604082015260600190565b60208082526018908201527f426f72696e674d6174683a204d756c204f766572666c6f770000000000000000604082015260600190565b81516fffffffffffffffffffffffffffffffff16815260208083015167ffffffffffffffff90811691830191909152604092830151169181019190915260600190565b6fffffffffffffffffffffffffffffffff93909316835267ffffffffffffffff918216602084015216604082015260600190565b90815260200190565b9485526001600160a01b0393841660208601529190921660408401526060830191909152608082015260a00190565b9182521515602082015260400190565b918252602082015260400190565b67ffffffffffffffff93909316835260208301919091526fffffffffffffffffffffffffffffffff16604082015260600190565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612a31578283fd5b83018035915067ffffffffffffffff821115612a4b578283fd5b6020019150368190038213156120d157600080fd5b60005b83811015612a7b578181015183820152602001612a63565b838111156111265750506000910152565b6001600160a01b0381168114612aa157600080fd5b50565b8015158114612aa157600080fdfea264697066735822122014aed64cfbe92f83323776f9a86c4389eae7e1ba20f377c8cb67d3a3996ef24f64736f6c634300060c0033";

type MCModConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MCModConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MCMod__factory extends ContractFactory {
  constructor(...args: MCModConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _sushi: string,
    _sushiPerBlock: BigNumberish,
    _LockingVault: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MCMod> {
    return super.deploy(
      _sushi,
      _sushiPerBlock,
      _LockingVault,
      overrides || {},
    ) as Promise<MCMod>;
  }
  getDeployTransaction(
    _sushi: string,
    _sushiPerBlock: BigNumberish,
    _LockingVault: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _sushi,
      _sushiPerBlock,
      _LockingVault,
      overrides || {},
    );
  }
  attach(address: string): MCMod {
    return super.attach(address) as MCMod;
  }
  connect(signer: Signer): MCMod__factory {
    return super.connect(signer) as MCMod__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MCModInterface {
    return new utils.Interface(_abi) as MCModInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MCMod {
    return new Contract(address, _abi, signerOrProvider) as MCMod;
  }
}
